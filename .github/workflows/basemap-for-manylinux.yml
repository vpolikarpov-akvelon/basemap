name: basemap-for-manylinux

env:
  PKGDIR: "packages/basemap"
  PYTHONWARNINGS: "ignore:DEPRECATION"
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PIP_TIMEOUT: 10
  PIP_RETRIES: 0

on:
  push:
    paths:
      - ".github/workflows/basemap-for-manylinux.yml"
      - "packages/basemap/**"
  pull_request:
    paths:
      - ".github/workflows/basemap-for-manylinux.yml"
      - "packages/basemap/**"
  workflow_dispatch:

jobs:

  checkout:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Upload checkout
        uses: actions/upload-artifact@v1
        with:
          name: checkout
          path: .

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
      max-parallel: 3
      fail-fast: false
    needs: checkout
    container: "pylegacy/python:${{ matrix.python-version }}-debian-8"
    steps:
      -
        name: Download checkout
        uses: actions/download-artifact@v1
        with:
          name: checkout
          path: .
      -
        name: Install lint requirements
        run: |
          cd ${{ env.PKGDIR }}
          pip install -r requirements-lint.txt
      -
        name: Install library requirements
        run: |
          cd ${{ env.PKGDIR }}
          pip install --prefer-binary -r requirements.txt
      -
        name: Run Flake8
        run: |
          cd ${{ env.PKGDIR }}
          if [ -x "$(command -v flake8)" ]; then
              flake8 src/mpl_toolkits/basemap/cm.py;
          fi
      -
        name: Run PyLint
        run: |
          cd ${{ env.PKGDIR }}
          if [ -x "$(command -v pylint)" ]; then
              pylint src/mpl_toolkits/basemap/cm.py;
          fi

  build-geos:
    strategy:
      matrix:
        image:
          - "pylegacy/x64-python:3.6-debian-4@sha256:41f8377e5294575bae233cc2370c6d4168c4fa0b24e83af4245b64b4940d572d"
          - "pylegacy/x86-python:3.6-debian-4@sha256:91bc1c1b2e60948144cc32d5009827f2bf5331c51d43ff4c4ebfe43b0b9e7843"
      max-parallel: 2
      fail-fast: false
    needs: lint
    runs-on: ubuntu-latest
    container: "${{ matrix.image }}"
    steps:
      -
        name: Download checkout
        uses: actions/download-artifact@v1
        with:
          name: checkout
          path: .
      -
        name: Install CMake 3.6.2
        run: |
          apt-get update
          apt-get install -y libidn11
          pkgvers=3.6.2
          pkgname=cmake
          pkgcode=cmake-${pkgvers}
          case "${{ matrix.arch }}" in
              x86)  pkgfile=${pkgcode}-Linux-i386.tar.gz;;
              *)    pkgfile=${pkgcode}-Linux-x86_64.tar.gz;;
          esac
          wget https://github.com/Kitware/CMake/releases/download/v${pkgvers}/${pkgfile} -P /tmp
          tar -xf /tmp/${pkgfile} --strip-components=1 -C /usr
          rm -rf /tmp/${pkgfile}
      -
        name: Install GCC toolchain
        run: |
          apt-get update
          apt-get install -y gcc g++ make
      -
        name: Build GEOS from source
        run: |
          cd ${{ env.PKGDIR }}
          python -c "import utils; utils.GeosLibrary('3.6.5').build('extern', njobs=16)"
      -
        name: Upload GEOS artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts-geos-${{ matrix.arch }}
          path: ${{ env.PKGDIR }}/extern
